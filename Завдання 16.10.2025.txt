1.Загальна схема завантаження Linux:

BIOS/UEFI → Завантажувач (Bootloader) → Ядро (Kernel) → Initramfs → Процес init (systemd) → Ціль рівня виконання (Runlevel) / Юніти (Units)
1. BIOS/UEFI: Апаратна ініціалізація, пошук та завантаження завантажувача.
2. Завантажувач (GRUB2): Завантажує ядро та initramfs в пам'ять.
3. Ядро: Ініціалізує апаратне забезпечення, використовує initramfs для доступу до кореневої файлової системи.
4. Init (systemd): Перший процес, який запускає всі необхідні системні служби.
5. Ціль рівня виконання (Target): Визначає фінальний стан системи (з графічним інтерфейсом або без).



2.Переглядати системні журнали можна кількома способами, в залежності від того, яку саме інформацію вам потрібно знайти. Основні логи зберігаються в каталозі /var/log, а для роботи з ними існують зручні команди.

1. Права доступу: Для перегляду більшості лог-файлів знадобляться права адміністратора (root). Використовуйте sudo перед командами, наприклад, sudo tail /var/log/auth.log.
2. Ротація логів: Щоб логи не займали всю вільну пам'ять, система автоматично стискає старі файли (додаючи до імені розширення на кшталт .1.gz) і створює нові. Цим процесом керує утиліта logrotate.
3. Системний менеджер журналів: Сучасні дистрибутиви Linux часто використовують систему journald. Для перегляду її журналів використовуйте команду journalctl. Наприклад, journalctl -f покаже логи в режимі реального часу.



3.Опис дозволу rw------- 
Цей запис означає:

· rw- - власник файлу має права на читання (read) та запис (write), але не на виконання.
· --- - група, до якої належить файл, не має жодних прав.
· --- - інші користувачі також не мають жодних прав.

Еквівалент у числовому форматі: 600
---
Прапорець виконуваного файлу (executable flag)?

Виконайте одну з команд:

1. Додати право на виконання для власника:
  
   chmod u+x filename
   
2. Додати право на виконання для всіх (власник, група, інші):
  
   chmod +x filename
   
3. Встановити конкретні права за допомогою числового запису (наприклад, 700 — повні права для власника):
  
   chmod 700 filename
   
   Де:
   · 7 = rwx (власник: читання, запис, виконання)
   · 0 = --- (група: немає прав)
   · 0 = --- (інші: немає прав)

· Після виконання команди chmod u+x дозвіл зміниться на rwx------ (власник може читати, записувати та виконувати файл).
· Право на виконання необхідне для запуску скриптів або програм без вказівки інтерпретатора (наприклад, ./script.sh).

chmod u+x my_script.sh  # Робить скрипт виконуваним для власника
ls -l my_script.sh      # Результат: -rwx------ ...




4.Різниця між apt та dpkg , зосереджених на Debian та Ubuntu.

 dpkg встановлює пакунки, а apt встановлює пакунки та вирішує їхні залежності.

Dpkg (Debian Package Manager)

dpkg — це низькорівнева основа системи пакунків Debian/Ubuntu. Ця утиліта безпосередньо працює з файлами .deb.

 dpkg — це двигун, а apt — це кермо, коробка передач та шляхова карта в одному. Ви можете керувати двигуном напряму (dpkg), але набагато зручніше та ефективніше користуватися органами керування автомобіля (apt).